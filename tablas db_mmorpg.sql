DROP DATABASE IF EXISTS `db_mmorpg`;
CREATE DATABASE IF NOT EXISTS `db_mmorpg`;

use db_mmorpg;

CREATE TABLE USUARIO ( 
id_usuario INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
usuario VARCHAR(20) NOT NULL,
contraseña VARCHAR(15) NOT NULL
);

CREATE TABLE DATOS_USUARIO (
id_usuario INT NOT NULL,
nombre VARCHAR(15) NOT NULL,
apellido VARCHAR(20) NOT NULL,
mail VARCHAR(50) NOT NULL,
fecha_nacimiento DATE NOT NULL,
pais VARCHAR(30) NOT NULL,
direccion VARCHAR(45),
CP VARCHAR(20),
fecha_registro DATE NOT NULL,
FOREIGN KEY (id_usuario) REFERENCES USUARIO (id_usuario)
);

CREATE TABLE SERVIDOR (
id_servidor INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
nombre VARCHAR(50) NOT NULL,
region VARCHAR(30) NOT NULL,
capacidad INT NOT NULL
);

CREATE TABLE USUARIO_SERVIDOR (
id_usuario INT NOT NULL,
id_servidor INT NOT NULL,
FOREIGN KEY (id_usuario) REFERENCES USUARIO (id_usuario),
FOREIGN KEY (id_servidor) REFERENCES SERVIDOR (id_servidor)
);

CREATE TABLE CLASS (
id_class INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
nombre VARCHAR(15) NOT NULL
);

CREATE TABLE PERSONAJE (
id_personaje INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
id_usuario INT NOT NULL,
id_servidor INT NOT NULL,
id_class INT NOT NULL,
nombre VARCHAR(20) NOT NULL,
raza VARCHAR(10) NOT NULL,
nivel INT NOT NULL,
daño VARCHAR(10) NOT NULL,
profesion VARCHAR(30),
bando VARCHAR(15) NOT NULL,
FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario),
FOREIGN KEY (id_servidor) REFERENCES SERVIDOR(id_servidor),
FOREIGN KEY (id_class) REFERENCES CLASS(id_class)
);

CREATE TABLE SPELLS (
id_spell INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
nombre VARCHAR(50) NOT NULL,
daño VARCHAR(15) NOT NULL,
nivel INT NOT NULL
);

CREATE TABLE SPELLS_CLASS (
id_class INT NOT NULL,
id_spell INT NOT NULL,
FOREIGN KEY (id_class) REFERENCES CLASS(id_class),
FOREIGN KEY (id_spell) REFERENCES SPELLS(id_spell)
);

CREATE TABLE ZONAS (
id_zona INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
nombre VARCHAR(50) NOT NULL,
nivel INT NOT NULL,
npcs INT NOT NULL
);

CREATE TABLE NPC (
id_npc INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
nombre VARCHAR(30) NOT NULL,
rango_nivel VARCHAR(10) NOT NULL,
daño VARCHAR(15)
);

CREATE TABLE BOSS (
id_boss INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
nombre VARCHAR(30) NOT NULL,
nivel INT NOT NULL,
daño VARCHAR(15) NOT NULL,
dificultad VARCHAR(15) NOT NULL
);

CREATE TABLE DUNGEONS (
id_dungeon INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
nombre VARCHAR(50) NOT NULL,
nivel INT NOT NULL,
dificultad VARCHAR(15),
grupo VARCHAR(5)
);

CREATE TABLE COMPOSICION_ZONA (
id_composicion_zona INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
id_zona INT NOT NULL,
id_npc INT,
id_dungeon INT,
id_boss INT,
FOREIGN KEY (id_zona) REFERENCES ZONAS(id_zona),
FOREIGN KEY (id_npc) REFERENCES NPC(id_npc),
FOREIGN KEY (id_dungeon) REFERENCES DUNGEONS(id_dungeon),
FOREIGN KEY (id_boss) REFERENCES BOSS(id_boss)
);

CREATE TABLE COMPOSICION_SERVIDOR (
id_composicion_zona INT NOT NULL,
id_servidor INT NOT NULL,
FOREIGN KEY (id_composicion_zona) REFERENCES COMPOSICION_ZONA(id_composicion_zona),
FOREIGN KEY (id_servidor) REFERENCES SERVIDOR(id_servidor)
);

CREATE TABLE ITEMS (
id_item INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
nombre VARCHAR(50) NOT NULL,
tipo VARCHAR(50) NOT NULL,
daño INT,
defensa INT,
nivel INT NOT NULL,
pasiva VARCHAR(50),
rango VARCHAR(15) NOT NULL,
drops VARCHAR(10) NOT NULL
);

CREATE TABLE SHOP (
id_shop INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
id_item INT NOT NULL,
precio INT NOT NULL,
FOREIGN KEY (id_item) REFERENCES ITEMS(id_item)
);

CREATE TABLE VENTAS (
id_ventas INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
id_usuario INT NOT NULL,
id_shop INT NOT NULL,
FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario),
FOREIGN KEY (id_shop) REFERENCES SHOP(id_shop)
);

CREATE TABLE AUCTION (
id_auction INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
id_usuario INT NOT NULL,
id_servidor INT NOT NULL,
id_item INT NOT NULL,
moneda VARCHAR(15) NOT NULL,
precio INT NOT NULL,
FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario),
FOREIGN KEY (id_servidor) REFERENCES SERVIDOR(id_servidor),
FOREIGN KEY (id_item) REFERENCES ITEMS(id_item)
);

CREATE TABLE MODERATOR ( 
id_moderator INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
id_usuario INT NOT NULL,
permisos VARCHAR(30) NOT NULL,
FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario)
);

CREATE TABLE MODERATOR_SERVIDOR (
id_moderator INT NOT NULL,
id_servidor INT NOT NULL,
FOREIGN KEY (id_moderator) REFERENCES MODERATOR (id_moderator),
FOREIGN KEY (id_servidor) REFERENCES SERVIDOR (id_servidor)
);

CREATE TABLE BANS (
id_ban INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
id_usuario INT NOT NULL,
id_moderator INT NOT NULL,
fecha_sancion DATE NOT NULL,
fecha_fin DATE NOT NULL,
motivo VARCHAR(300) NOT NULL,
FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario),
FOREIGN KEY (id_moderator) REFERENCES MODERATOR(id_moderator)
);

CREATE TABLE PETITIONS (
id_petitions INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
id_ban INT NOT NULL,
id_usuario INT NOT NULL,
fecha DATE NOT NULL,
descargo VARCHAR(300),
FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario),
FOREIGN KEY (id_ban) REFERENCES BANS(id_ban)
);


